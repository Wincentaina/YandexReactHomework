Index: ../yandexreacthomework/client/src/components/Review/Review.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react';\nimport s from \"./Review.module.css\"\nimport Rating from \"../Rating/Rating\";\n\nconst Review = ({reviews}) => {\n    return (\n        <div className={s.review}>\n            <div className={s.top_block}>\n                <p className={s.username}>{reviews.user.name}</p>\n                <Rating number={reviews.rating} />\n            </div>\n            <div className={s.review_text}>\n                {reviews.text}\n            </div>\n        </div>\n    );\n};\n\nexport default Review;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../yandexreacthomework/client/src/components/Review/Review.jsx b/../yandexreacthomework/client/src/components/Review/Review.jsx
--- a/../yandexreacthomework/client/src/components/Review/Review.jsx	
+++ b/../yandexreacthomework/client/src/components/Review/Review.jsx	
@@ -1,19 +1,70 @@
-import React from 'react';
+// import React from 'react';
+// import s from "./Review.module.css"
+// import Rating from "../Rating/Rating";
+//
+// const Review = ({reviews}) => {
+//     return (
+//         <div className={s.review}>
+//             <div className={s.top_block}>
+//                 <p className={s.username}>{reviews.user.name}</p>
+//                 <Rating number={reviews.rating} />
+//             </div>
+//             <div className={s.review_text}>
+//                 {reviews.text}
+//             </div>
+//         </div>
+//     );
+// };
+//
+// export default Review;
+
+import React, {useEffect, useState} from 'react';
 import s from "./Review.module.css"
 import Rating from "../Rating/Rating";
+import {useDispatch, useSelector} from "react-redux";
+import {loadReviewsIfNotExist} from "../../store/review/loadReviewsIfNotExist";
+import {selectReviewById, selectReviews} from "../../store/review/selectors";
+
+const Review = ({reviewId}) => {
+
+    const [review, setReview] = useState({
+        name: "",
+        rating: "",
+        text: "",
+    })
+
+    const dispatch = useDispatch()
+    useEffect(() => {
+        dispatch(loadReviewsIfNotExist(reviewId))
+    }, [])
+
+    let rev = useSelector((state) => selectReviewById(state, reviewId))
+
+    useEffect(() => {
+        setReview((prev) => {
+            return (
+                {...prev, ...rev}
+            )
+        })
+    }, [])
 
-const Review = ({reviews}) => {
-    return (
-        <div className={s.review}>
-            <div className={s.top_block}>
-                <p className={s.username}>{reviews.user.name}</p>
-                <Rating number={reviews.rating} />
-            </div>
-            <div className={s.review_text}>
-                {reviews.text}
-            </div>
-        </div>
-    );
-};
+    const Review = ({reviews}) => {
+        return (
+            <div className={s.review}>
+                <div className={s.top_block}>
+                    <p className={s.username}>{review.name}</p>
+                    <Rating number={review.rating}/>
+                    <p className={s.username}>{reviews.user.name}</p>
+                    <Rating number={reviews.rating} />
+                </div>
+                <div className={s.review_text}>
+                    {review.text}
+                    {reviews.text}
+                </div>
+            </div>
+        );
+    };
 
-export default Review;
\ No newline at end of file
+    export default Review;
+
+
