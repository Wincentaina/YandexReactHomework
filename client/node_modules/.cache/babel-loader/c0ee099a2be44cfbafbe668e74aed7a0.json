{"ast":null,"code":"import { genreSlice } from \"./index\";\nimport { prepareData } from \"../utils\";\nexport const loadBooksIfNotExist = genreId = (dispatch, getState) => {\n  // if (selectGenre(getState())?.length > 0) {\n  //     return\n  // }\n  dispatch(genreSlice.actions.startLoading());\n  fetch(`http://localhost:3001/api/books?id=${genreId}`).then(response => response.json()).then(books => {\n    dispatch(genreSlice.actions.successLoading(prepareData(books)));\n  }).catch(() => {\n    dispatch(genreSlice.actions.failLoading());\n  });\n};","map":{"version":3,"names":["genreSlice","prepareData","loadBooksIfNotExist","genreId","dispatch","getState","actions","startLoading","fetch","then","response","json","books","successLoading","catch","failLoading"],"sources":["/Users/wincentaina/WebstormProjects/yandexreacthomework/client/src/store/genre/loadBooksIfNotExist.js"],"sourcesContent":["import {genreSlice} from \"./index\";\nimport {prepareData} from \"../utils\";\n\nexport const loadBooksIfNotExist = (genreId) = (dispatch, getState) => {\n    // if (selectGenre(getState())?.length > 0) {\n    //     return\n    // }\n    dispatch(genreSlice.actions.startLoading())\n    fetch(`http://localhost:3001/api/books?id=${genreId}`)\n        .then((response) => response.json())\n        .then(books => {\n            dispatch(genreSlice.actions.successLoading(prepareData(books)))\n        }).catch(() => {\n            dispatch(genreSlice.actions.failLoading())\n    })\n}"],"mappings":"AAAA,SAAQA,UAAU,QAAO,SAAS;AAClC,SAAQC,WAAW,QAAO,UAAU;AAEpC,OAAO,MAAMC,mBAAmB,GAAIC,OAAO,GAAI,CAACC,QAAQ,EAAEC,QAAQ,KAAK;EACnE;EACA;EACA;EACAD,QAAQ,CAACJ,UAAU,CAACM,OAAO,CAACC,YAAY,EAAE,CAAC;EAC3CC,KAAK,CAAE,sCAAqCL,OAAQ,EAAC,CAAC,CACjDM,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAACG,KAAK,IAAI;IACXR,QAAQ,CAACJ,UAAU,CAACM,OAAO,CAACO,cAAc,CAACZ,WAAW,CAACW,KAAK,CAAC,CAAC,CAAC;EACnE,CAAC,CAAC,CAACE,KAAK,CAAC,MAAM;IACXV,QAAQ,CAACJ,UAAU,CAACM,OAAO,CAACS,WAAW,EAAE,CAAC;EAClD,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module"}