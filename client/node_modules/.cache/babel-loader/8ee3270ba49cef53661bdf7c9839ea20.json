{"ast":null,"code":"// import {createSlice} from \"@reduxjs/toolkit\";\n// import {Statuses} from \"../../constants/statuses\";\n//\n// const initialState = {\n//     entities: {},\n//     ids: [],\n//     status: Statuses.idle,\n//\n// }\n//\n// export const reviewSlice = createSlice({\n//     name: 'review',\n//     initialState,\n//     reducers: {\n//         startLoading: (state) => {\n//             state.status = Statuses.inProgress\n//             state.entities = {}\n//         },\n//         successLoading: (state, action) => {\n//             state.status = Statuses.success\n//\n//             state.entities = {...state.entities, ...action.payload.entities}\n//             state.ids = Array.from(new Set([...state.ids, ...action.payload.ids]))\n//         },\n//         failLoading: (state) => {\n//             state.status = Statuses.failed\n//             console.log(state.status)\n//         }\n//     }\n// })\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { Statuses } from \"../../constants/statuses\";\nconst initialState = {\n  entities: {},\n  ids: [],\n  status: Statuses.idle\n};\nexport const reviewSlice = createSlice({\n  name: 'review',\n  initialState,\n  reducers: {\n    startLoading: state => {\n      state.status = Statuses.inProgress;\n      state.entities = {};\n      state.ids = [];\n    },\n    successLoading: (state, action) => {\n      state.status = Statuses.success;\n      state.entities = action.payload.entities;\n      state.ids = action.payload.ids;\n    },\n    failLoading: state => {\n      state.status = Statuses.failed;\n      state.entities = {};\n      state.ids = [];\n    }\n  }\n});","map":{"version":3,"names":["createSlice","Statuses","initialState","entities","ids","status","idle","reviewSlice","name","reducers","startLoading","state","inProgress","successLoading","action","success","payload","failLoading","failed"],"sources":["/Users/wincentaina/WebstormProjects/yandexreacthomework/client/src/store/review/index.js"],"sourcesContent":["// import {createSlice} from \"@reduxjs/toolkit\";\n// import {Statuses} from \"../../constants/statuses\";\n//\n// const initialState = {\n//     entities: {},\n//     ids: [],\n//     status: Statuses.idle,\n//\n// }\n//\n// export const reviewSlice = createSlice({\n//     name: 'review',\n//     initialState,\n//     reducers: {\n//         startLoading: (state) => {\n//             state.status = Statuses.inProgress\n//             state.entities = {}\n//         },\n//         successLoading: (state, action) => {\n//             state.status = Statuses.success\n//\n//             state.entities = {...state.entities, ...action.payload.entities}\n//             state.ids = Array.from(new Set([...state.ids, ...action.payload.ids]))\n//         },\n//         failLoading: (state) => {\n//             state.status = Statuses.failed\n//             console.log(state.status)\n//         }\n//     }\n// })\n\n\nimport {createSlice} from \"@reduxjs/toolkit\";\nimport {Statuses} from \"../../constants/statuses\";\n\nconst initialState = {\n    entities: {},\n    ids: [],\n    status: Statuses.idle,\n\n}\n\nexport const reviewSlice = createSlice({\n    name: 'review',\n    initialState,\n    reducers: {\n        startLoading: (state) => {\n            state.status = Statuses.inProgress\n            state.entities = {}\n            state.ids = []\n        },\n        successLoading: (state, action) => {\n            state.status = Statuses.success\n            state.entities = action.payload.entities\n            state.ids = action.payload.ids\n        },\n        failLoading: (state) => {\n            state.status = Statuses.failed\n            state.entities = {}\n            state.ids = []\n        }\n    }\n})\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAAQA,WAAW,QAAO,kBAAkB;AAC5C,SAAQC,QAAQ,QAAO,0BAA0B;AAEjD,MAAMC,YAAY,GAAG;EACjBC,QAAQ,EAAE,CAAC,CAAC;EACZC,GAAG,EAAE,EAAE;EACPC,MAAM,EAAEJ,QAAQ,CAACK;AAErB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGP,WAAW,CAAC;EACnCQ,IAAI,EAAE,QAAQ;EACdN,YAAY;EACZO,QAAQ,EAAE;IACNC,YAAY,EAAGC,KAAK,IAAK;MACrBA,KAAK,CAACN,MAAM,GAAGJ,QAAQ,CAACW,UAAU;MAClCD,KAAK,CAACR,QAAQ,GAAG,CAAC,CAAC;MACnBQ,KAAK,CAACP,GAAG,GAAG,EAAE;IAClB,CAAC;IACDS,cAAc,EAAE,CAACF,KAAK,EAAEG,MAAM,KAAK;MAC/BH,KAAK,CAACN,MAAM,GAAGJ,QAAQ,CAACc,OAAO;MAC/BJ,KAAK,CAACR,QAAQ,GAAGW,MAAM,CAACE,OAAO,CAACb,QAAQ;MACxCQ,KAAK,CAACP,GAAG,GAAGU,MAAM,CAACE,OAAO,CAACZ,GAAG;IAClC,CAAC;IACDa,WAAW,EAAGN,KAAK,IAAK;MACpBA,KAAK,CAACN,MAAM,GAAGJ,QAAQ,CAACiB,MAAM;MAC9BP,KAAK,CAACR,QAAQ,GAAG,CAAC,CAAC;MACnBQ,KAAK,CAACP,GAAG,GAAG,EAAE;IAClB;EACJ;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module"}